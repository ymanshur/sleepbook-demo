{
	"info": {
		"_postman_id": "f80d7360-2f4a-4d36-9930-4a5197c92e2c",
		"name": "Sleepbook (Demo)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "983710"
	},
	"item": [
		{
			"name": "API",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Sleep",
							"item": [
								{
									"name": "List sleeps",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/sleeps?limit=37&start={{$timestamp}}&end={{$timestamp}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"sleeps"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "37"
												},
												{
													"key": "start",
													"value": "{{$timestamp}}"
												},
												{
													"key": "end",
													"value": "{{$timestamp}}"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "List sleeps",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{host}}/api/v1/users/:user_id/sleeps?page=25",
													"host": [
														"{{host}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														":user_id",
														"sleeps"
													],
													"query": [
														{
															"key": "page",
															"value": "25"
														},
														{
															"key": "limit",
															"value": "25",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": null,
											"header": [
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "x-xss-protection",
													"value": "0"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "none"
												},
												{
													"key": "referrer-policy",
													"value": "strict-origin-when-cross-origin"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "vary",
													"value": "Accept"
												},
												{
													"key": "etag",
													"value": "W/\"7a25e045a9426df18bf7a0a26dce7c68\""
												},
												{
													"key": "cache-control",
													"value": "max-age=0, private, must-revalidate"
												},
												{
													"key": "x-request-id",
													"value": "ad403d66-d595-4d2c-84e7-04eccc4ac1a8"
												},
												{
													"key": "x-runtime",
													"value": "0.012471"
												},
												{
													"key": "server-timing",
													"value": "start_processing.action_controller;dur=0.01, sql.active_record;dur=3.32, instantiation.active_record;dur=0.42, unpermitted_parameters.action_controller;dur=0.01, process_action.action_controller;dur=10.52"
												},
												{
													"key": "content-length",
													"value": "4476"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"message\": \"User's sleeps fetched successfully\",\n    \"data\": [\n        {\n            \"id\": 20,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-13T16:00:00.000+07:00\",\n            \"end_time\": \"2024-01-13T22:00:00.000+07:00\",\n            \"duration\": 21600,\n            \"created_at\": \"2024-01-13T16:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-13T22:00:00.000+07:00\"\n        },\n        {\n            \"id\": 19,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-13T03:00:00.000+07:00\",\n            \"end_time\": \"2024-01-13T07:00:00.000+07:00\",\n            \"duration\": 14400,\n            \"created_at\": \"2024-01-13T03:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-13T07:00:00.000+07:00\"\n        },\n        {\n            \"id\": 18,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-12T11:00:00.000+07:00\",\n            \"end_time\": \"2024-01-12T13:00:00.000+07:00\",\n            \"duration\": 7200,\n            \"created_at\": \"2024-01-12T11:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-12T13:00:00.000+07:00\"\n        },\n        {\n            \"id\": 17,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-12T03:00:00.000+07:00\",\n            \"end_time\": \"2024-01-12T06:00:00.000+07:00\",\n            \"duration\": 10800,\n            \"created_at\": \"2024-01-12T03:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-12T06:00:00.000+07:00\"\n        },\n        {\n            \"id\": 16,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-11T12:00:00.000+07:00\",\n            \"end_time\": \"2024-01-11T20:00:00.000+07:00\",\n            \"duration\": 28800,\n            \"created_at\": \"2024-01-11T12:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-11T20:00:00.000+07:00\"\n        },\n        {\n            \"id\": 15,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-11T01:00:00.000+07:00\",\n            \"end_time\": \"2024-01-11T04:00:00.000+07:00\",\n            \"duration\": 10800,\n            \"created_at\": \"2024-01-11T01:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-11T04:00:00.000+07:00\"\n        },\n        {\n            \"id\": 14,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-10T14:00:00.000+07:00\",\n            \"end_time\": \"2024-01-10T19:00:00.000+07:00\",\n            \"duration\": 18000,\n            \"created_at\": \"2024-01-10T14:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-10T19:00:00.000+07:00\"\n        },\n        {\n            \"id\": 13,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-10T00:00:00.000+07:00\",\n            \"end_time\": \"2024-01-10T01:00:00.000+07:00\",\n            \"duration\": 3600,\n            \"created_at\": \"2024-01-10T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-10T01:00:00.000+07:00\"\n        },\n        {\n            \"id\": 12,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-09T15:00:00.000+07:00\",\n            \"end_time\": \"2024-01-09T18:00:00.000+07:00\",\n            \"duration\": 10800,\n            \"created_at\": \"2024-01-09T15:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-09T18:00:00.000+07:00\"\n        },\n        {\n            \"id\": 11,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-09T02:00:00.000+07:00\",\n            \"end_time\": \"2024-01-09T07:00:00.000+07:00\",\n            \"duration\": 18000,\n            \"created_at\": \"2024-01-09T02:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-09T07:00:00.000+07:00\"\n        },\n        {\n            \"id\": 10,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-08T15:00:00.000+07:00\",\n            \"end_time\": \"2024-01-08T18:00:00.000+07:00\",\n            \"duration\": 10800,\n            \"created_at\": \"2024-01-08T15:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-08T18:00:00.000+07:00\"\n        },\n        {\n            \"id\": 9,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-08T05:00:00.000+07:00\",\n            \"end_time\": \"2024-01-08T11:00:00.000+07:00\",\n            \"duration\": 21600,\n            \"created_at\": \"2024-01-08T05:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-08T11:00:00.000+07:00\"\n        },\n        {\n            \"id\": 8,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-07T16:00:00.000+07:00\",\n            \"end_time\": \"2024-01-08T00:00:00.000+07:00\",\n            \"duration\": 28800,\n            \"created_at\": \"2024-01-07T16:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-08T00:00:00.000+07:00\"\n        },\n        {\n            \"id\": 7,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-07T03:00:00.000+07:00\",\n            \"end_time\": \"2024-01-07T06:00:00.000+07:00\",\n            \"duration\": 10800,\n            \"created_at\": \"2024-01-07T03:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-07T06:00:00.000+07:00\"\n        },\n        {\n            \"id\": 6,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-06T19:00:00.000+07:00\",\n            \"end_time\": \"2024-01-07T00:00:00.000+07:00\",\n            \"duration\": 18000,\n            \"created_at\": \"2024-01-06T19:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-07T00:00:00.000+07:00\"\n        },\n        {\n            \"id\": 5,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-06T08:00:00.000+07:00\",\n            \"end_time\": \"2024-01-06T11:00:00.000+07:00\",\n            \"duration\": 10800,\n            \"created_at\": \"2024-01-06T08:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-06T11:00:00.000+07:00\"\n        },\n        {\n            \"id\": 4,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-05T17:00:00.000+07:00\",\n            \"end_time\": \"2024-01-05T19:00:00.000+07:00\",\n            \"duration\": 7200,\n            \"created_at\": \"2024-01-05T17:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-05T19:00:00.000+07:00\"\n        },\n        {\n            \"id\": 3,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-05T03:00:00.000+07:00\",\n            \"end_time\": \"2024-01-05T04:00:00.000+07:00\",\n            \"duration\": 3600,\n            \"created_at\": \"2024-01-05T03:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-05T04:00:00.000+07:00\"\n        },\n        {\n            \"id\": 2,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-04T11:00:00.000+07:00\",\n            \"end_time\": \"2024-01-04T17:00:00.000+07:00\",\n            \"duration\": 21600,\n            \"created_at\": \"2024-01-04T11:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-04T17:00:00.000+07:00\"\n        },\n        {\n            \"id\": 1,\n            \"user_id\": 1,\n            \"start_time\": \"2024-01-04T00:00:00.000+07:00\",\n            \"end_time\": \"2024-01-04T07:00:00.000+07:00\",\n            \"duration\": 25200,\n            \"created_at\": \"2024-01-04T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-04T07:00:00.000+07:00\"\n        }\n    ],\n    \"meta\": {\n        \"current_page\": 25,\n        \"prev_page\": 24,\n        \"total_pages\": 25,\n        \"total_count\": 500\n    }\n}"
										}
									]
								},
								{
									"name": "Get a  sleep",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code == 200 || pm.response.code == 201 ) {\r",
													"    var jsonData = pm.response.json()[\"data\"]\r",
													"    pm.collectionVariables.set(\"sleep_id\", jsonData[\"id\"])\r",
													"    pm.collectionVariables.set(\"user_id\", jsonData[\"user_id\"])\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/sleeps/:id",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"sleeps",
												":id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												},
												{
													"key": "id",
													"value": "{{sleep_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a sleep",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code == 200 || pm.response.code == 201 ) {\r",
													"    var jsonData = pm.response.json()[\"data\"]\r",
													"    pm.collectionVariables.set(\"sleep_id\", jsonData[0][\"id\"])\r",
													"    pm.collectionVariables.set(\"user_id\", jsonData[0][\"user_id\"])\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"start_time\": \"{{$isoTimestamp}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/sleeps",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"sleeps"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Create a sleep",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"start_time\": \"{{$isoTimestamp}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/api/v1/users/:user_id/sleeps",
													"host": [
														"{{host}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														":user_id",
														"sleeps"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": null,
											"header": [
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "x-xss-protection",
													"value": "0"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "none"
												},
												{
													"key": "referrer-policy",
													"value": "strict-origin-when-cross-origin"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "vary",
													"value": "Accept"
												},
												{
													"key": "etag",
													"value": "W/\"b35e598c87814a1e2e98266ddd38c7fa\""
												},
												{
													"key": "cache-control",
													"value": "max-age=0, private, must-revalidate"
												},
												{
													"key": "x-request-id",
													"value": "c252c005-12bc-4f46-991f-75cf40246be8"
												},
												{
													"key": "x-runtime",
													"value": "0.050346"
												},
												{
													"key": "server-timing",
													"value": "start_processing.action_controller;dur=0.01, sql.active_record;dur=23.10, instantiation.active_record;dur=0.28, start_transaction.active_record;dur=0.01, transaction.active_record;dur=10.72, process_action.action_controller;dur=42.00"
												},
												{
													"key": "content-length",
													"value": "263"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"message\": \"User's sleep created successfully\",\n    \"data\": [\n        {\n            \"id\": 250001,\n            \"user_id\": 501,\n            \"start_time\": \"2025-09-21T22:30:38.788+07:00\",\n            \"end_time\": null,\n            \"duration\": 0,\n            \"created_at\": \"2025-09-21T22:30:38.844+07:00\",\n            \"updated_at\": \"2025-09-21T22:30:38.844+07:00\"\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Update a sleep",
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"end_time\": \"{{$isoTimestamp}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/sleeps/:id",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"sleeps",
												":id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												},
												{
													"key": "id",
													"value": "{{sleep_id}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Update a sleep",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"end_time\": \"{{$isoTimestamp}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/api/v1/users/:user_id/sleeps/:id",
													"host": [
														"{{host}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														":user_id",
														"sleeps",
														":id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}"
														},
														{
															"key": "id",
															"value": "{{sleep_id}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": null,
											"header": [
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "x-xss-protection",
													"value": "0"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "none"
												},
												{
													"key": "referrer-policy",
													"value": "strict-origin-when-cross-origin"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "vary",
													"value": "Accept"
												},
												{
													"key": "etag",
													"value": "W/\"a906428a28ed24ca4375aa1bcc5c2b9a\""
												},
												{
													"key": "cache-control",
													"value": "max-age=0, private, must-revalidate"
												},
												{
													"key": "x-request-id",
													"value": "d55a03eb-89f7-4005-8e8b-d5f73d208310"
												},
												{
													"key": "x-runtime",
													"value": "0.023161"
												},
												{
													"key": "server-timing",
													"value": "start_processing.action_controller;dur=0.02, sql.active_record;dur=10.45, instantiation.active_record;dur=0.25, start_transaction.active_record;dur=0.01, transaction.active_record;dur=8.45, process_action.action_controller;dur=19.66"
												},
												{
													"key": "content-length",
													"value": "289"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"message\": \"User's sleep updated successfully\",\n    \"data\": {\n        \"user_id\": 501,\n        \"end_time\": \"2025-09-21T22:31:26.368+07:00\",\n        \"duration\": 47,\n        \"id\": 250001,\n        \"start_time\": \"2025-09-21T22:30:38.788+07:00\",\n        \"created_at\": \"2025-09-21T22:30:38.844+07:00\",\n        \"updated_at\": \"2025-09-21T22:31:26.415+07:00\"\n    }\n}"
										}
									]
								},
								{
									"name": "Delete a sleep",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/sleeps/:id",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"sleeps",
												":id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												},
												{
													"key": "id",
													"value": "{{sleep_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Followee",
							"item": [
								{
									"name": "List followees",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/followees",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"followees"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "25",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "List followees",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{host}}/api/v1/users/:user_id/followees?page=20",
													"host": [
														"{{host}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														":user_id",
														"followees"
													],
													"query": [
														{
															"key": "page",
															"value": "20"
														},
														{
															"key": "limit",
															"value": "25",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": null,
											"header": [
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "x-xss-protection",
													"value": "0"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "none"
												},
												{
													"key": "referrer-policy",
													"value": "strict-origin-when-cross-origin"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "vary",
													"value": "Accept"
												},
												{
													"key": "etag",
													"value": "W/\"aecfde721301d5a0a5250c72be1ee050\""
												},
												{
													"key": "cache-control",
													"value": "max-age=0, private, must-revalidate"
												},
												{
													"key": "x-request-id",
													"value": "a1a2665e-e8a4-4b8f-ad49-9ceae1026187"
												},
												{
													"key": "x-runtime",
													"value": "0.012779"
												},
												{
													"key": "server-timing",
													"value": "start_processing.action_controller;dur=0.01, sql.active_record;dur=4.68, instantiation.active_record;dur=0.18, unpermitted_parameters.action_controller;dur=0.01, process_action.action_controller;dur=10.95"
												},
												{
													"key": "content-length",
													"value": "1025"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"message\": \"Followed users fetched successfully\",\n    \"data\": [\n        {\n            \"id\": 492,\n            \"name\": \"Albertine Bruen\",\n            \"created_at\": \"2024-01-04T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-04T00:00:00.000+07:00\"\n        },\n        {\n            \"id\": 493,\n            \"name\": \"Bryant Ledner\",\n            \"created_at\": \"2024-01-12T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-12T00:00:00.000+07:00\"\n        },\n        {\n            \"id\": 494,\n            \"name\": \"Cinderella Wolf\",\n            \"created_at\": \"2024-01-12T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-12T00:00:00.000+07:00\"\n        },\n        {\n            \"id\": 495,\n            \"name\": \"Ninfa Wiza\",\n            \"created_at\": \"2024-01-12T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-12T00:00:00.000+07:00\"\n        },\n        {\n            \"id\": 496,\n            \"name\": \"June Collins\",\n            \"created_at\": \"2024-01-14T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-14T00:00:00.000+07:00\"\n        },\n        {\n            \"id\": 498,\n            \"name\": \"Mr. Tiffanie Pagac\",\n            \"created_at\": \"2024-01-13T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-13T00:00:00.000+07:00\"\n        },\n        {\n            \"id\": 500,\n            \"name\": \"Gretta Crist MD\",\n            \"created_at\": \"2024-01-07T00:00:00.000+07:00\",\n            \"updated_at\": \"2024-01-07T00:00:00.000+07:00\"\n        }\n    ],\n    \"meta\": {\n        \"current_page\": 20,\n        \"prev_page\": 19,\n        \"total_pages\": 20,\n        \"total_count\": 387\n    }\n}"
										}
									]
								},
								{
									"name": "Get a followee",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/followees/:id",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"followees",
												":id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												},
												{
													"key": "id",
													"value": "{{followed_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a followee",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code == 200 || pm.response.code == 201 ) {\r",
													"    var jsonData = pm.response.json()[\"data\"]\r",
													"    pm.collectionVariables.set(\"followed_id\", jsonData[\"id\"])   \r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"followed_id\": 501\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/followees",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"followees"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Create a followee",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"followed_id\": 500\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/api/v1/users/:user_id/followees",
													"host": [
														"{{host}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														":user_id",
														"followees"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{user_id}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": null,
											"header": [
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "x-xss-protection",
													"value": "0"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-permitted-cross-domain-policies",
													"value": "none"
												},
												{
													"key": "referrer-policy",
													"value": "strict-origin-when-cross-origin"
												},
												{
													"key": "content-type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "vary",
													"value": "Accept"
												},
												{
													"key": "etag",
													"value": "W/\"70726aa9327d7cbbcec8facd581cabd5\""
												},
												{
													"key": "cache-control",
													"value": "max-age=0, private, must-revalidate"
												},
												{
													"key": "x-request-id",
													"value": "e911b522-c797-4818-a986-cee3a2c40fc6"
												},
												{
													"key": "x-runtime",
													"value": "0.059950"
												},
												{
													"key": "server-timing",
													"value": "start_processing.action_controller;dur=0.02, sql.active_record;dur=12.84, instantiation.active_record;dur=0.33, start_transaction.active_record;dur=0.02, transaction.active_record;dur=11.29, process_action.action_controller;dur=27.53"
												},
												{
													"key": "content-length",
													"value": "188"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"message\": \"User followed successfully\",\n    \"data\": {\n        \"id\": 500,\n        \"name\": \"Gretta Crist MD\",\n        \"created_at\": \"2024-01-07T00:00:00.000+07:00\",\n        \"updated_at\": \"2024-01-07T00:00:00.000+07:00\"\n    }\n}"
										}
									]
								},
								{
									"name": "Delete a followee",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/followees/:id",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"followees",
												":id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												},
												{
													"key": "id",
													"value": "{{followed_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List followees sleeps",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/followee_sleeps",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"followee_sleeps"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "25",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a followee sleep",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/api/v1/users/:user_id/followee_sleeps/:id",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"followee_sleeps",
												":id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{user_id}}"
												},
												{
													"key": "id",
													"value": "{{sleep_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "List users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "25",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{user_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code == 200 || pm.response.code == 201 ) {\r",
											"    var jsonData = pm.response.json()[\"data\"]\r",
											"    pm.collectionVariables.set(\"user_id\", jsonData[\"id\"])   \r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Yusuf\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": [
								{
									"name": "Create a user",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Yusuf\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/v1/users",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "referrer-policy",
											"value": "strict-origin-when-cross-origin"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "vary",
											"value": "Accept"
										},
										{
											"key": "etag",
											"value": "W/\"b34f06a1e892a99a024b1f8fcc185762\""
										},
										{
											"key": "cache-control",
											"value": "max-age=0, private, must-revalidate"
										},
										{
											"key": "x-request-id",
											"value": "ccdd21f5-7e26-4f17-89d8-4a8facc386a3"
										},
										{
											"key": "x-runtime",
											"value": "0.021396"
										},
										{
											"key": "server-timing",
											"value": "start_processing.action_controller;dur=0.01, sql.active_record;dur=6.57, start_transaction.active_record;dur=0.01, transaction.active_record;dur=6.73, process_action.action_controller;dur=13.10"
										},
										{
											"key": "content-length",
											"value": "177"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"message\": \"User created successfully\",\n    \"data\": {\n        \"id\": 501,\n        \"name\": \"Yusuf\",\n        \"created_at\": \"2025-09-21T22:29:41.362+07:00\",\n        \"updated_at\": \"2025-09-21T22:29:41.362+07:00\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update a user",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Faiz\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{user_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a user",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{user_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/up",
					"host": [
						"{{host}}"
					],
					"path": [
						"up"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "sleep_id",
			"value": ""
		},
		{
			"key": "followed_id",
			"value": ""
		}
	]
}